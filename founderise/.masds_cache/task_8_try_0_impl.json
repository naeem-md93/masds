{"reasoning": "The task involves creating a Sequelize model `UserModel` for storing user data in the database microservice at the specified path (`src/microservices/database/models/UserModel.js`). The model design should include fields for user details like `id`, `username`, `email`, and `password`, as well as `createdAt` and `updatedAt` timestamps. This aligns with the PRD's goal of supporting multiple databases and ensuring scalable user profile storage. We will use `cat` to write the contents of the Sequelize schema to the file. Since the file already exists, it will be overwritten.", "implementation": ["#!/usr/bin/env bash", "set -euo pipefail", "", "# Define target file path", "FILE=src/microservices/database/models/UserModel.js", "", "# Create or overwrite UserModel.js with the Sequelize schema", "cat << 'EOF' > $FILE", "'use strict';", "", "const { DataTypes, Model } = require('sequelize');", "const sequelize = require('../config/database'); // Assumes a database config file exists", "", "class User extends Model {}", "", "User.init(", "  {", "    id: {", "      type: DataTypes.INTEGER,", "      autoIncrement: true,", "      primaryKey: true,", "    },", "    username: {", "      type: DataTypes.STRING,", "      allowNull: false,", "      unique: true,", "    },", "    email: {", "      type: DataTypes.STRING,", "      allowNull: false,", "      unique: true", "    },", "    password: {", "      type: DataTypes.STRING,", "      allowNull: false,", "    },", "    createdAt: {", "      type: DataTypes.DATE,", "      defaultValue: DataTypes.NOW,", "    },", "    updatedAt: {", "      type: DataTypes.DATE,", "      defaultValue: DataTypes.NOW,", "    },", "  },", "  {", "    sequelize,", "    modelName: 'User',", "    tableName: 'users',", "    timestamps: true,", "  }", ");", "", "module.exports = User;", "EOF", "", "echo '\u2705 UserModel schema successfully created at $FILE.'"]}