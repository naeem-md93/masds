{"reasoning": "The task requires creating a JWT authentication middleware in `src/middleware/auth.js`. This middleware will validate JWT tokens included in the Authorization header of incoming API requests. The implementation will check for a token, verify it using a secret key from environment variables, and either attach the decoded user information to the request object or return an appropriate error. The script will overwrite the existing `src/middleware/auth.js` file with the implementation.", "implementation": ["#!/usr/bin/env bash", "set -euo pipefail", "", "# Define the target file path", "TARGET_FILE='src/middleware/auth.js'", "", "# Create or overwrite the authentication middleware", "cat << 'EOF' > $TARGET_FILE", "// Import dependencies", "const jwt = require('jsonwebtoken');", "require('dotenv').config();", "", "// Middleware function to validate JWT tokens", "const authenticateJWT = (req, res, next) => {", "  const authHeader = req.headers['authorization'];", "  const token = authHeader && authHeader.split(' ')[1];", "", "  if (!token) {", "    return res.status(401).json({ error: 'Access token is missing' });", "  }", "", "  // Verify the provided token", "  jwt.verify(token, process.env.JWT_SECRET, (err, user) => {", "    if (err) {", "      return res.status(403).json({ error: 'Invalid or expired token' });", "    }", "    req.user = user; // Attach decoded user information to the request", "    next();", "  });", "};", "", "// Export the middleware", "module.exports = authenticateJWT;", "EOF", "", "echo '\u2705 JWT Authentication Middleware implemented successfully in src/middleware/auth.js.'"]}